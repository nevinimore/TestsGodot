[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://c0n3ras2swng"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_0csnp"]
constant = 2.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_x0s1d"]
constant = 100.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_cwf2w"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_cctnw"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1b786"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qkfsu"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_517em"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(100, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_03q06"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_fwk6k"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_cinn0"]
function = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;
	float n_out2p2 = n_out2p0.g;


// Input:5
	float n_out5p0 = TIME;


// FloatConstant:10
	float n_out10p0 = 2.000000;


// FloatOp:12
	float n_out12p0 = n_out5p0 * n_out10p0;


// FloatFunc:8
	float n_out8p0 = sin(n_out12p0);


// FloatConstant:11
	float n_out11p0 = 100.000000;


// FloatOp:13
	float n_out13p0 = n_out8p0 * n_out11p0;


// VectorCompose:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out13p0, n_in6p1, n_in6p2);


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in4p4 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p2 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out2p2 < n_in4p1)
	{
		n_out4p0 = n_out6p0;
	}
	else
	{
		n_out4p0 = n_in4p4;
	}


// VectorOp:3
	vec2 n_out3p0 = n_out2p0 + vec2(n_out4p0.xy);


// Output:0
	VERTEX = n_out3p0;


}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(760, 80)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_1b786")
nodes/vertex/2/position = Vector2(-660, 100)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_qkfsu")
nodes/vertex/3/position = Vector2(180.119, 12.553)
nodes/vertex/4/node = SubResource("VisualShaderNodeIf_517em")
nodes/vertex/4/position = Vector2(-200, 160)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_03q06")
nodes/vertex/5/position = Vector2(-1640, 280)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorCompose_fwk6k")
nodes/vertex/6/position = Vector2(-660, 320)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatFunc_cinn0")
nodes/vertex/8/position = Vector2(-1100, 260)
nodes/vertex/10/node = SubResource("VisualShaderNodeFloatConstant_0csnp")
nodes/vertex/10/position = Vector2(-1580, 420)
nodes/vertex/11/node = SubResource("VisualShaderNodeFloatConstant_x0s1d")
nodes/vertex/11/position = Vector2(-1120, 460)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatOp_cwf2w")
nodes/vertex/12/position = Vector2(-1340, 240)
nodes/vertex/13/node = SubResource("VisualShaderNodeFloatOp_cctnw")
nodes/vertex/13/position = Vector2(-880, 320)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0, 2, 2, 4, 0, 4, 0, 3, 1, 6, 0, 4, 5, 5, 0, 12, 0, 10, 0, 12, 1, 12, 0, 8, 0, 8, 0, 13, 0, 11, 0, 13, 1, 13, 0, 6, 0)
